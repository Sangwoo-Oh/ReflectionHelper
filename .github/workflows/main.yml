name: CI

on:
  push:
    branches: [ "ci" ]

jobs:
  # build-frontend:
  #   name: Build frontend
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'

  #     - name: Install dependencies
  #       run: cd backend && npm install

  #     - name: Build project
  #       run: cd backend && npm run build

  #     - name: Upload build artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: frontend-dist
  #         path: backend/public/build/ # build成果物フォルダに合わせて変更

  deploy:
    name: Deploy to remote server
    runs-on: ubuntu-latest
    # needs: build-frontend  # build後に実行

    steps:
      # - name: Download build artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: frontend-dist
      #     path: dist/

      # - name: Copy files to remote server
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      #     REMOTE_USER: ${{ secrets.REMOTE_USER }}
      #     REMOTE_PATH: /var/www/html/yourapp  # 実際のデプロイ先に変更
      #   run: |
      #     # SSH設定
      #     mkdir -p ~/.ssh
      #     echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa

      #     # 成果物を転送
      #     scp -r dist/* ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}

      - name: SSH and git pull
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} << 'EOF'
            echo "Connected to remote server"
          EOF